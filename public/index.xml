<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>0xmani&#39;s Blog</title>
    <link>https://0xmani.github.io/blog/</link>
    <description>Recent content on 0xmani&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
        <atom:link href="https://0xmani.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://0xmani.github.io/blog/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://0xmani.github.io/blog/about/</guid>
      
        <description>&lt;p&gt;Manikandan&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Stabilizing the Dump Shell</title>
      <link>https://0xmani.github.io/blog/post/stabilize-dump-shell/</link>
      <pubDate>Tue, 07 Jun 2022 23:38:30 -0700</pubDate>
      
      <guid>https://0xmani.github.io/blog/post/stabilize-dump-shell/</guid>
      
        <description>&lt;p&gt;Hello All, This is my first blog that explains how to stabilize the shell in Linux.&lt;/p&gt;
&lt;p&gt;While playing CTF Challenges, it is often to spawn a reverse shell on the target machine. Other than ssh shell, every shell is a dump which often kills the reverse shell and this shell doesn&amp;rsquo;t give you the proper shell functionalities like tab completion, &amp;ldquo;su&amp;rdquo; command, clear the terminal, etc. Sometimes, pressing &amp;ldquo;ctrl+c&amp;rdquo; completely kills your reverse shell.&lt;/p&gt;
&lt;p&gt;Shell Stabilization prevents you from killing your reverse shell and adds proper shell functionalities.&lt;/p&gt;
&lt;p&gt;Note: This post assumes you already a reverse shell on the target machine.&lt;/p&gt;
&lt;p&gt;Commands to upgrade a TTY dump shells&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Python3&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python3 -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;import pty; pty.spawn(&amp;#39;/bin/bash)&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
python -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;import pty; pty.spawn(&amp;#39;/bin/bash)&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Bash&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/usr/bin/script -qc /bin/bash /dev/null
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
/bin/sh -i
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Perl&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;perl â€”e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;exec &amp;#34;/bin/sh&amp;#34;;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;or&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
perl: exec &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ruby: exec &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;lua&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;lua: os.execute&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/bin/sh&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then press ctrl+z to background the process.&lt;/p&gt;
&lt;p&gt;Run the following command in attacker machine,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Attacker Machine&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stty raw -echo
fg
ENTER
ENTER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Run &amp;ldquo;stty raw -echo&amp;rdquo; and &amp;ldquo;fg&amp;rdquo; command on the attacker machine, then click double ENTER. The reverse shell will be retrieved.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Victim Machine&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;export TERM&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xterm
stty cols &lt;span style=&#34;color:#ae81ff&#34;&gt;132&lt;/span&gt; rows &lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Set the terminal environment to variable (e.g. xterm, xterm-256, etc)&lt;/p&gt;
&lt;p&gt;All Done!. Now you should have a stabilized bash shell that can tab complete, clear the screen, and use Ctrl+C.&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
